AWSTemplateFormatVersion: '2010-09-09'
Metadata:
  License: Apache-2.0
Description: This template launches dummy web application
Parameters:
  ImageId:
    Description: AMI ID used in web application
    Type: AWS::EC2::Image::Id
    Default: ami-061392db613a6357b
  KeyName:
    Description: web application key name 
    Type: String
  PolicyTargetValue:
    Description: Scaling policy target value
    Type: String
  WebappCertificate:
    Description: Certificate for Load Balancer
    Type: AWS::SSM::Parameter::Value<String>
    Default: webappCertificate
Resources:
  WebAppSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: WebAppSecurityGroup
      GroupDescription: Web application security group
      VpcId: 
        Fn::ImportValue: PrimaryVpcId
      SecurityGroupIngress:
      - IpProtocol: tcp
        Description: ssh
        FromPort: 22
        ToPort: 22
        SourceSecurityGroupId: 
          Fn::ImportValue: BastionSecurityGroupId
      - IpProtocol: tcp
        Description: http from vpc CidrIp 
        FromPort: 80
        ToPort: 80
        CidrIp: 
          Fn::ImportValue: IpSpace
      SecurityGroupEgress:
      - IpProtocol: tcp
        Description: http to s3
        FromPort: 80
        ToPort: 80
        DestinationPrefixListId:
          Fn::ImportValue: S3PrefixList
  ElbSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: ElbSecurityGroup
      GroupDescription: ELB security group
      VpcId: 
        Fn::ImportValue: PrimaryVpcId
      SecurityGroupIngress:
      - IpProtocol: tcp
        Description: https world 
        FromPort: 443
        ToPort: 443
        CidrIp: 0.0.0.0/0
  ScalePolicy:
    Type: AWS::AutoScaling::ScalingPolicy
    Properties:
      AutoScalingGroupName: 
        Ref: WebAppAutoscalingGroup
      PolicyType: TargetTrackingScaling
      TargetTrackingConfiguration:
        PredefinedMetricSpecification:
          PredefinedMetricType: ASGAverageCPUUtilization
        TargetValue: 
          Ref: PolicyTargetValue
  WebAppAutoscalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    UpdatePolicy:
      AutoScalingRollingUpdate:
        MaxBatchSize: 1
        MinInstancesInService: 1
        PauseTime: PT10S
    # TODO: Creation policy
    Properties:
      VPCZoneIdentifier:
      - Fn::ImportValue: PrivateSubnetAZAId 
      - Fn::ImportValue: PrivateSubnetAZBId 
      LaunchConfigurationName:
        Ref: LaunchConfig
      MinSize: '2'
      MaxSize: '4'
      LoadBalancerNames:
      - Ref: ElasticLoadBalancer
  ElasticLoadBalancer:
    Type: AWS::ElasticLoadBalancing::LoadBalancer
    Properties:
      Scheme: internet-facing
      SecurityGroups:
      - Ref: ElbSecurityGroup 
      Subnets:
      - Fn::ImportValue: PublicSubnetAZAId 
      - Fn::ImportValue: PublicSubnetAZBId
      Listeners:
      - LoadBalancerPort: '443'
        InstancePort: '80'
        Protocol: HTTPS
        InstanceProtocol: HTTP
        SSLCertificateId:
          Ref: WebappCertificate
      HealthCheck:
        Target: HTTP:80/
        HealthyThreshold: '2'
        UnhealthyThreshold: '2'
        Interval: '30' 
        Timeout: '5'
  LaunchConfig:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      ImageId:
        Ref: ImageId 
      InstanceType: t2.micro
      SecurityGroups:
      - Ref: WebAppSecurityGroup
      KeyName: 
        Ref: KeyName
      UserData:
        Fn::Base64: |
          #!/usr/bin/env bash
          yum update -y
          yum install httpd -y
          service httpd start
          chkconfig httpd on
          cd /var/www/html
          echo "<html><h1>This is alpha project page</h1></html>" > index.html
